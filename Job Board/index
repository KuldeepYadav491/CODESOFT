// Folder Structure:
// online-quiz-maker/
// ├── client/        (React frontend)
// └── server/        (Node.js backend)

// ------------------------------
// === client/src/App.jsx ===

import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Home from './pages/Home';
import CreateQuiz from './pages/CreateQuiz';
import QuizList from './pages/QuizList';
import TakeQuiz from './pages/TakeQuiz';
import Results from './pages/Results';
import Login from './pages/Login';
import Register from './pages/Register';

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/create" element={<CreateQuiz />} />
        <Route path="/quizzes" element={<QuizList />} />
        <Route path="/quiz/:id" element={<TakeQuiz />} />
        <Route path="/results" element={<Results />} />
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />
      </Routes>
    </Router>
  );
}

export default App;

// === client/src/pages/Home.jsx ===

import { Link } from 'react-router-dom';

function Home() {
  return (
    <div className="home">
      <h1>Online Quiz Maker</h1>
      <Link to="/create">Create Quiz</Link>
      <Link to="/quizzes">Take Quiz</Link>
    </div>
  );
}

export default Home;

// === server/index.js ===

const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 5000;

app.use(cors());
app.use(express.json());

mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
}).then(() => console.log('MongoDB connected'))
  .catch(err => console.error(err));

app.get('/', (req, res) => {
  res.send('Quiz Maker API running');
});

// You'd include your routes for /auth, /quiz, /results here

app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

// === server/.env.example ===

MONGO_URI=mongodb+srv://your_username:your_password@cluster.mongodb.net/quizdb?retryWrites=true&w=majority
JWT_SECRET=your_jwt_secret

// === client/package.json (scripts) ===

"scripts": {
  "start": "react-scripts start",
  "build": "react-scripts build",
  "test": "react-scripts test",
  "eject": "react-scripts eject"
},

// === server/package.json (scripts) ===

"scripts": {
  "start": "node index.js",
  "dev": "nodemon index.js"
}

// You still need to:
// - Add quiz and user models (Mongoose)
// - Create frontend forms and components (CreateQuiz, TakeQuiz, Results, etc.)
// - Hook up API calls using axios or fetch
// - Deploy with Netlify (frontend) and Render (backend)

// Let me know if you want full implementation of each page/component
